methods:
  - method: account_nextIndex
    cache:
      size: 0
    params:
      - name: accountId
        ty: String

  - method: alephNode_emergencyFinalize
    cache:
      size: 0
    params:
      - name: justification
        ty: Bytes
      - name: hash
        ty: BlockHash
      - name: blockNumber
        ty: BlockNumber

  - method: alephNode_getBlockAuthor
    params:
      - name: hash
        ty: BlockHash

  - method: alephNode_ready
    cache:
      size: 0

  - method: author_hasKey
    cache:
      size: 0
    params:
      - name: publicKey
        ty: Bytes
      - name: keyType
        ty: String

  - method: author_hasSessionKeys
    cache:
      size: 0
    params:
      - name: sessionKeys
        ty: Bytes

  - method: author_insertKey
    cache:
      size: 0
    params:
      - name: keyType
        ty: String
      - name: suri
        ty: String
      - name: publicKey
        ty: Bytes

  - method: author_submitExtrinsic
    cache:
      size: 0
    params:
      - name: extrinsic
        ty: Bytes

  - method: author_removeExtrinsic
    cache:
      size: 0
    params:
      - name: bytesOrHash
        ty: Bytes

  - method: author_rotateKeys
    cache:
      size: 0

  - method: author_pendingExtrinsics
    cache:
      size: 1
      ttl_seconds: 3

  - method: chain_getBlockHash
    params:
      - name: blockNumber
        ty: BlockNumber
        optional: true
        inject: true

  - method: chain_getHeader
    params:
      - name: hash
        ty: BlockHash
        optional: true
        inject: true

  - method: chain_getBlock
    params:
      - name: hash
        ty: BlockHash
        optional: true
        inject: true

  - method: chain_getFinalizedHead
    cache:
      size: 1
      ttl_seconds: 6
      invalidate_at: OnNewFinalizedHead

  - method: state_getChildReadProof
    params:
      - name: childStorageKey
        ty: StorageKey
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getRuntimeVersion
    params:
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getMetadata
    params:
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getPairs
    params:
      - name: prefix
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getStorage
    params:
      - name: key
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getStorageHash
    params:
      - name: key
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getStorageSize
    params:
      - name: key
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getKeys
    params:
      - name: key
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getKeysPaged
    params:
      - name: key
        ty: StorageKey
      - name: count
        ty: u32
      - name: startKey
        ty: StorageKey
        optional: true
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_getReadProof
    params:
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_queryStorage
    params:
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: fromBlock
        ty: BlockHash
      - name: toBlock
        ty: BlockHash
        optional: true
        inject: false

  - method: state_queryStorageAt
    params:
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: state_traceBlock
    params:
      - name: Block
        ty: BlockHash
      - name: targets
        ty: String
        optional: true
        inject: false
      - name: StorageKeys
        ty: String
        optional: true
        inject: false
      - name: methods
        ty: String
        optional: true
        inject: false

  - method: state_call
    cache:
      size: 200
      ttl_seconds: 30
    params:
      - name: method
        ty: String
      - name: data
        ty: Bytes
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: childstate_getKeys
    params:
      - name: childKey
        ty: StorageKey
      - name: prefix
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true


  - method: childstate_getKeysPaged
    params:
      - name: childStorageKey
        ty: StorageKey
      - name: prefix
        ty: StorageKey
      - name: count
        ty: u32
      - name: startKey
        ty: StorageKey
        optional: true
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: childstate_getStorage
    params:
      - name: childStorageKey
        ty: StorageKey
      - name: key
        ty: StorageKey
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: childstate_getStorageEntries
    params:
      - name: childKey
        ty: StorageKey
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: childstate_getStorageHash
    params:
      - name: childKey
        ty: StorageKey
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: childstate_getStorageSize
    params:
      - name: childKey
        ty: StorageKey
      - name: keys
        ty: 'Vec<StorageKey>'
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: offchain_localStorageGet
    params:
      - name: kind
        ty: StorageKind
      - name: key
        ty: Bytes

  - method: offchain_localStorageSet
    params:
      - name: kind
        ty: StorageKind
      - name: key
        ty: Bytes
      - name: value
        ty: Bytes

  - method: payment_queryFeeDetails
    params:
      - name: extrinsic
        ty: Bytes
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: payment_queryFeeInfo
    params:
      - name: extrinsic
        ty: Bytes
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: system_chain
    cache:
      size: 1

  - method: system_name
    response: Subway

  - method: system_chainType
    cache:
      size: 1

  - method: system_localPeerId
    cache:
      size: 1

  - method: system_nodeRoles
    cache:
      size: 1

  - method: system_peers

  - method: system_properties
    cache:
      size: 1

  - method: system_removeReservedPeer
    params:
      - name: peerId
        ty: String
    cache:
      size: 0

  - method: system_reservedPeers
    cache:
      size: 0

  - method: system_resetLogFilter
    cache:
      size: 0

  - method: system_syncStat
    cache:
      size: 0

  - method: system_version
    cache:
      size: 1

  - method: system_unstable_networkState
    cache:
      size: 1

  - method: system_localListenAddresses
    cache:
      size: 1

  - method: system_health
    cache:
      size: 1
      ttl_seconds: 5

  - method: system_dryRun
    cache:
      size: 200
      ttl_seconds: 30
    params:
      - name: extrinsic
        ty: Bytes
      - name: at
        ty: BlockHash
        optional: true
        inject: true

  - method: system_accountNextIndex
    cache:
      size: 0
    params:
      - name: accountId
        ty: AccountId

  - method: system_addLogFilter
    cache:
      size: 0
    params:
      - name: directives
        ty: String

  - method: system_addReservedPeer
    cache:
      size: 0
    params:
      - name: peer
        ty: String


subscriptions:
  - subscribe: author_submitAndWatchExtrinsic
    unsubscribe: author_unwatchExtrinsic
    name: author_extrinsicUpdate

  - subscribe: chain_subscribeNewHeads
    unsubscribe: chain_unsubscribeNewHeads
    name: chain_newHead
    merge_strategy: replace

  - subscribe: chain_subscribeFinalizedHeads
    unsubscribe: chain_unsubscribeFinalizedHeads
    name: chain_finalizedHead
    merge_strategy: replace

  - subscribe: chain_subscribeAllHeads
    unsubscribe: chain_unsubscribeAllHeads
    name: chain_allHead
    merge_strategy: replace

  - subscribe: state_subscribeRuntimeVersion
    unsubscribe: state_unsubscribeRuntimeVersion
    name: state_runtimeVersion
    merge_strategy: replace

  - subscribe: chain_subscribeRuntimeVersion
    unsubscribe: chain_unsubscribeRuntimeVersion
    name: chain_runtimeVersion
    merge_strategy: replace

  - subscribe: state_subscribeStorage
    unsubscribe: state_unsubscribeStorage
    name: state_storage
    merge_strategy: merge_storage_changes

  - subscribe: subscribe_newHead
    unsubscribe: unsubscribe_newHead
    name: newHead
    merge_strategy: merge_storage_changes

  - subscribe: transaction_unstable_submitAndWatch
    unsubscribe: transaction_unstable_unwatch
    name: transaction_unstableSubmit

aliases:
  - [ chain_subscribeNewHeads, chain_subscribeNewHead ]
  - [ chain_unsubscribeNewHeads, chain_unsubscribeNewHead ]
  - [ chain_subscribeFinalizedHeads, chain_subscribeFinalisedHeads ]
  - [ chain_unsubscribeFinalizedHeads, chain_unsubscribeFinalisedHeads ]
  - [ chain_getBlockHash, chain_getHead ]
  - [ state_getKeysPaged, state_getKeysPagedAt ]
  - [ state_getStorage, state_getStorageAt ]
  - [ state_getStorageHash, state_getStorageHashAt ]
  - [ state_getStorageSize, state_getStorageSizeAt ]
  - [ state_getRuntimeVersion, chain_getRuntimeVersion ]
  - [ childstate_getKeysPaged, childstate_getKeysPagedAt ]
  - [ chain_getFinalizedHead, chain_getFinalisedHead ]
